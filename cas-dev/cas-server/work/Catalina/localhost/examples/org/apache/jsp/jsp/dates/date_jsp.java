/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.21
 * Generated at: 2017-05-25 01:43:02 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.jsp.dates;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class date_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, false, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<body bgcolor=\"white\">\r\n");
      dates.JspCalendar clock = null;
      clock = (dates.JspCalendar) _jspx_page_context.getAttribute("clock", javax.servlet.jsp.PageContext.PAGE_SCOPE);
      if (clock == null){
        clock = new dates.JspCalendar();
        _jspx_page_context.setAttribute("clock", clock, javax.servlet.jsp.PageContext.PAGE_SCOPE);
      }
      out.write("\r\n");
      out.write("\r\n");
      out.write("<font size=4>\r\n");
      out.write("<ul>\r\n");
      out.write("<li>    Day of month: is  ");
      out.write(org.apache.jasper.runtime.JspRuntimeLibrary.toString((((dates.JspCalendar)_jspx_page_context.findAttribute("clock")).getDayOfMonth())));
      out.write("\r\n");
      out.write("<li>    Year: is  ");
      out.write(org.apache.jasper.runtime.JspRuntimeLibrary.toString((((dates.JspCalendar)_jspx_page_context.findAttribute("clock")).getYear())));
      out.write("\r\n");
      out.write("<li>    Month: is  ");
      out.write(org.apache.jasper.runtime.JspRuntimeLibrary.toString((((dates.JspCalendar)_jspx_page_context.findAttribute("clock")).getMonth())));
      out.write("\r\n");
      out.write("<li>    Time: is  ");
      out.write(org.apache.jasper.runtime.JspRuntimeLibrary.toString((((dates.JspCalendar)_jspx_page_context.findAttribute("clock")).getTime())));
      out.write("\r\n");
      out.write("<li>    Date: is  ");
      out.write(org.apache.jasper.runtime.JspRuntimeLibrary.toString((((dates.JspCalendar)_jspx_page_context.findAttribute("clock")).getDate())));
      out.write("\r\n");
      out.write("<li>    Day: is  ");
      out.write(org.apache.jasper.runtime.JspRuntimeLibrary.toString((((dates.JspCalendar)_jspx_page_context.findAttribute("clock")).getDay())));
      out.write("\r\n");
      out.write("<li>    Day Of Year: is  ");
      out.write(org.apache.jasper.runtime.JspRuntimeLibrary.toString((((dates.JspCalendar)_jspx_page_context.findAttribute("clock")).getDayOfYear())));
      out.write("\r\n");
      out.write("<li>    Week Of Year: is  ");
      out.write(org.apache.jasper.runtime.JspRuntimeLibrary.toString((((dates.JspCalendar)_jspx_page_context.findAttribute("clock")).getWeekOfYear())));
      out.write("\r\n");
      out.write("<li>    era: is  ");
      out.write(org.apache.jasper.runtime.JspRuntimeLibrary.toString((((dates.JspCalendar)_jspx_page_context.findAttribute("clock")).getEra())));
      out.write("\r\n");
      out.write("<li>    DST Offset: is  ");
      out.write(org.apache.jasper.runtime.JspRuntimeLibrary.toString((((dates.JspCalendar)_jspx_page_context.findAttribute("clock")).getDSTOffset())));
      out.write("\r\n");
      out.write("<li>    Zone Offset: is  ");
      out.write(org.apache.jasper.runtime.JspRuntimeLibrary.toString((((dates.JspCalendar)_jspx_page_context.findAttribute("clock")).getZoneOffset())));
      out.write("\r\n");
      out.write("</ul>\r\n");
      out.write("</font>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
