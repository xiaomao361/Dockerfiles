<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hjgj.permissions.mapper.UserMapper" >
  <resultMap id="BaseResultMap" type="com.hjgj.permissions.model.User" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="fullname" property="fullname" jdbcType="VARCHAR" />
    <result column="gender" property="gender" jdbcType="BIT" />
    <result column="is_admin" property="isAdmin" jdbcType="BIT" />
    <result column="department_id" property="departmentId" jdbcType="INTEGER" />
    <result column="is_lock" property="isLock" jdbcType="BIT" />
    <result column="is_delete" property="isDelete" jdbcType="BIT" />
    <result column="create_person" property="createPerson" jdbcType="VARCHAR" />
    <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
    <result column="update_person" property="updatePerson" jdbcType="VARCHAR" />
    <result column="update_date" property="updateDate" jdbcType="TIMESTAMP" />
    <result column="department_name" property="departmentName" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    p_user.id, p_user.username, p_user.password, p_user.fullname, p_user.gender, p_user.is_admin, p_user.department_id, p_user.is_lock, p_user.is_delete, 
    p_user.create_person, p_user.create_date, p_user.update_person, p_user.update_date, p_department.name department_name
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from p_user left join p_department on p_user.department_id=p_department.id
    where p_user.id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from p_user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.hjgj.permissions.model.User" >
    insert into p_user (id, username, password, 
      fullname, gender, is_admin, 
      department_id, is_lock, is_delete, 
      create_person, create_date, update_person, 
      update_date)
    values (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{fullname,jdbcType=VARCHAR}, #{gender,jdbcType=BIT}, #{isAdmin,jdbcType=BIT}, 
      #{departmentId,jdbcType=INTEGER}, #{isLock,jdbcType=BIT}, #{isDelete,jdbcType=BIT}, 
      #{createPerson,jdbcType=VARCHAR}, #{createDate,jdbcType=TIMESTAMP}, #{updatePerson,jdbcType=VARCHAR}, 
      #{updateDate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.hjgj.permissions.model.User" >
    insert into p_user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="username != null" >
        username,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="fullname != null" >
        fullname,
      </if>
      <if test="gender != null" >
        gender,
      </if>
      <if test="isAdmin != null" >
        is_admin,
      </if>
      <if test="departmentId != null" >
        department_id,
      </if>
      <if test="isLock != null" >
        is_lock,
      </if>
      <if test="isDelete != null" >
        is_delete,
      </if>
      <if test="createPerson != null" >
        create_person,
      </if>
      <if test="createDate != null" >
        create_date,
      </if>
      <if test="updatePerson != null" >
        update_person,
      </if>
      <if test="updateDate != null" >
        update_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="fullname != null" >
        #{fullname,jdbcType=VARCHAR},
      </if>
      <if test="gender != null" >
        #{gender,jdbcType=BIT},
      </if>
      <if test="isAdmin != null" >
        #{isAdmin,jdbcType=BIT},
      </if>
      <if test="departmentId != null" >
        #{departmentId,jdbcType=INTEGER},
      </if>
      <if test="isLock != null" >
        #{isLock,jdbcType=BIT},
      </if>
      <if test="isDelete != null" >
        #{isDelete,jdbcType=BIT},
      </if>
      <if test="createPerson != null" >
        #{createPerson,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updatePerson != null" >
        #{updatePerson,jdbcType=VARCHAR},
      </if>
      <if test="updateDate != null" >
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.hjgj.permissions.model.User" >
    update p_user
    <set >
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="fullname != null" >
        fullname = #{fullname,jdbcType=VARCHAR},
      </if>
      <if test="gender != null" >
        gender = #{gender,jdbcType=BIT},
      </if>
      <if test="isAdmin != null" >
        is_admin = #{isAdmin,jdbcType=BIT},
      </if>
      <if test="departmentId != null" >
        department_id = #{departmentId,jdbcType=INTEGER},
      </if>
      <if test="isLock != null" >
        is_lock = #{isLock,jdbcType=BIT},
      </if>
      <if test="isDelete != null" >
        is_delete = #{isDelete,jdbcType=BIT},
      </if>
      <if test="createPerson != null" >
        create_person = #{createPerson,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updatePerson != null" >
        update_person = #{updatePerson,jdbcType=VARCHAR},
      </if>
      <if test="updateDate != null" >
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hjgj.permissions.model.User" >
    update p_user
    set username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      fullname = #{fullname,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=BIT},
      is_admin = #{isAdmin,jdbcType=BIT},
      department_id = #{departmentId,jdbcType=INTEGER},
      is_lock = #{isLock,jdbcType=BIT},
      is_delete = #{isDelete,jdbcType=BIT},
      create_person = #{createPerson,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      update_person = #{updatePerson,jdbcType=VARCHAR},
      update_date = #{updateDate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>

<!-- 以上是为了节约开发时间，使用MyBatisGenerator生成的代码-->
<!-- 以下是针对不足功能，添加的代码  -->

    <!-- 这里演示了用两种方法连接字符串 -->
    <sql id="where">
    	where p_user.is_delete=0
    	<if test="username!=null and username!=''">
    		and p_user.username like '${username}%' 
    	</if>
    	<if test="fullname!=null and fullname!=''">
    		and p_user.fullname like CONCAT(#{fullname},'%') 
    	</if>
    </sql>
    <sql id="orderby">
    	order by p_user.id desc 
    </sql>
	<select id="getUserByUsername" resultMap="BaseResultMap" parameterType="java.lang.String" >
		select 
		<include refid="Base_Column_List" />
		from p_user left join p_department on p_user.department_id=p_department.id
		where p_user.username = #{username,jdbcType=VARCHAR}
	</select>    
    <select id="getUserTotalBySearch" parameterType="com.hjgj.permissions.model.UserSearchModel" resultType="java.lang.Integer">
    	select count(0) 
    	from p_user
    	<include refid="where"/>
    </select>
    <!-- 这个方法虽然没有显示的书写limit，但是也是分页的，利用的MyBatis的RowBounds -->
    <select id="getUserListBySearch" parameterType="com.hjgj.permissions.model.UserSearchModel" resultMap="BaseResultMap">
        select 
	    <include refid="Base_Column_List" />
	    from p_user left join p_department on p_user.department_id=p_department.id
        <include refid="where"/>
        <include refid="orderby"/>
    </select>
	<delete id="deleteUserRoleById" parameterType="java.lang.Integer">
		delete from p_user_role where user_id=#{id};
	</delete>
	<insert id="assignRoles">
	    insert into p_user_role(user_id,role_id)
		values
   		<foreach collection="roleIds" index="index" item="item" open="" separator="," close="">
			(#{userId},#{item})
		</foreach>
		;
    </insert> 	 
</mapper>